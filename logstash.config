input { 
    file { 
       path => "<absolute log file path>/file.log"
       start_position => "beginning" 
       sincedb_path => "/dev/null"
       codec => multiline {
          pattern => "^%{TIMESTAMP_ISO8601} "
          negate => true
          what => "previous"
        }
    } 
}

filter {
    grok {
        match => { "message" => "%{TIMESTAMP_ISO8601}%{SPACE}\[%{WORD:logType}\]%{GREEDYDATA}" }
    }

    if [logType] == "request" {
      grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}\[%{WORD}\]%{SPACE}\[%{UUID:requestId}\]%{SPACE}\[%{WORD:app}\]%{SPACE}\[%{LOGLEVEL:level}\]%{SPACE}\[%{WORD:method}\]%{SPACE}\[%{IP:ip}\]%{SPACE}\[%{DATA:api}\]%{SPACE}\[%{DATA:body}\]" }
      }
    }
    else if [logType] == "response" {
      grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}\[%{WORD}\]%{SPACE}\[%{UUID:requestId}\]%{SPACE}\[%{WORD:app}\]%{SPACE}\[%{LOGLEVEL:level}\]%{SPACE}\[%{WORD:method}\]%{SPACE}\[%{IP:ip}\]%{SPACE}\[%{DATA:api}\]%{SPACE}\[%{NUMBER:code}\]%{SPACE}\[%{NUMBER:size}\]%{SPACE}\[%{DATA:time}\]%{SPACE}\[%{DATA:agent}\]" }
      }
    }
    else {
      grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}\[%{WORD}\]%{SPACE}\[%{UUID:requestId}\]%{SPACE}\[%{WORD:app}\]%{SPACE}\[%{LOGLEVEL:level}\]%{SPACE}\[%{DATA:filename}\]%{SPACE}(?<stack>(.|\r|\n)*)" }
      }
    }
}

output {
  elasticsearch {
    hosts => ["http://127.0.0.1:9200"]
    index => "motifer-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "your_password"
  }
  # Enable this for debug logs.
  # stdout { codec => rubydebug }
}
